{
  "name": "textversionjs",
  "version": "1.0.2",
  "description": "A tool for generating the text version of an html email.",
  "main": "src/textversion.js",
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/EDMdesigner/textversionjs.git"
  },
  "keywords": [
    "email",
    "html",
    "text",
    "version",
    "plaintext"
  ],
  "author": {
    "name": "EDMdesigner.com"
  },
  "maintainers": [
    {
      "name": "Attila Stubendek",
      "email": "stubendek.attila@gmail.com"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/EDMdesigner/textversionjs/issues"
  },
  "homepage": "https://github.com/EDMdesigner/textversionjs#readme",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-jasmine": "^2.4.0",
    "gulp-jscs": "3.0.2",
    "gulp-jscs-stylish": "^1.4.0",
    "gulp-jshint": "^2.0.1",
    "gulp-jsonlint": "^1.1.2",
    "jshint": "^2.9.2"
  },
  "readme": "# textversionjs\n\nGenerate the text version of your HTML email in a second.\n\nThis tool is an open source project. Feel free to use it any time in your projects!\n\n## htmlToPlainText\n\nThe function that generates plain text from email htmls.\n\n### Params\n\nParam       | Type     | Required     | Default value | Description\n---         |---       |---           |---            |---\nhtmlText    | string   | Yes          |               | The html version of the email\nstyleConfig | json     | No           |               | Options for converting\n\n### styleConfig\n\nParam             | Type     | Required     | Default value | Description\n---               |---       |---           |---            |---\nlinkProcess       | function | No           |               | Callback function to customize links appearance\nimgProcess        | function | No           |               | Callback function to customize image appearance\nheadingStyle      | string   | No           | \"underline\"   | Define heading appearance, options: \"underline\", \"linebreak\", \"hashify\"\nlistStyle         | string   | No           | \"indention\"   | Define list appearance, options: \"indention\", \"linebreak\"\nuIndentionChar    | string   | No           | \"-\"           | If listStyle is indention, uIndentionChar is the character that fills the indention for unordered lists\noIndentionChar    | string   | No           | \"-\"           | If listStyle is indention, oIndentionChar is the character that fills the indention for ordered lists after the heading number\nlistIndentionTabs | int      | No           | 3             | If listStyle is indention, listIndentionTabs is the width of the indention\n\n### linkProcess\n\nParam       | Type     | Required     | Default value | Description\n---         |---       |---           |---            |---\nhref        | string   | Yes          |               | The destination (href property) of the link\nlinkText    | string   | Yes          |               | The text of the link\n\n### imgProcess\n\nParam       | Type     | Required     | Default value | Description\n---         |---       |---           |---            |---\nsrc         | string   | Yes          |               | The source (src property) of the image\nalt         | string   | Yes          |               | The alternative text (alt property) of the image\n\n### Examples\n\n#### Simple conversion with default style\n\n```js\nvar textVersion = require(\"textversionjs\");\nvar htmlText = \"<html>\" +\n\t\t\t\t\t\"<body>\" +\n\t\t\t\t\t\t\"Lorem ipsum <a href=\\\"http://foo.foo\\\">dolor</a> sic <strong>amet</strong><br />\" +\n\t\t\t\t\t\t\"Lorem ipsum <img src=\\\"http://foo.jpg\\\" alt=\\\"foo\\\" /> sic <pre>amet</pre>\" +\n\t\t\t\t\t\t\"<p>Lorem ipsum dolor <br /> sic amet</p>\" +\n\t\t\t\t\t\t\"<script>\" +\n\t\t\t\t\t\t\t\"alert(\\\"nothing\\\");\" +\n\t\t\t\t\t\t\"</script>\" +\n\t\t\t\t\t\"</body>\" +\n\t\t\t\t\"</html>\";\n\nvar plainText = textVersion(htmlText);\n// returns\n// \"Lorem ipsum [dolor] (http://foo.foo) sic amet\n// Lorem ipsum ![foo] (http://foo.jpg) sic amet\n// Lorem ipsum dolor\n// sic amet\"\n\n```\n\n#### Customize link appearance\n\n```js\nvar textVersion = require(\"textversionjs\");\nvar htmlText = \"<p>Lorem <a href=\\\"http://foo.foo\\\">ipsum</a> dolor sic amet</p>\";\n\nvar styleConfig: {\n\tlinkStyle: function(href, linkText){\n\t\treturn linkText + \" \" + \"(\" + href + \")\";\n\t}\n};\n\nvar plainText = textVersion(htmlText, styleConfig);\n// returns \"Lorem ipsum (http://foo.foo) dolor sic amet\"\n\n```\n\n#### Customize headings\n\n```js\nvar textVersion = require(\"textversionjs\");\n\nvar htmlText = \"<h1>Lorem ipsum</h1>\" +\n\t\t\t\t\"<p>Lorem ipsum dolor sic amet</p>\";\n\nvar styleConfig: {\n\theadingStyle: \"hashify\"\n};\n\nvar plainText = textVersion(htmlText, styleConfig);\n// returns\n// \"# Lorem ipsum\n//\n// Lorem ipsum dolor sic amet\"\n\n```\n\n#### Customize lists\n\n```js\nvar textVersion = require(\"textversionjs\");\nvar htmlText = \"<ul>\" +\n\t\t\t\t\t\"<li>Lorem</li>\" +\n\t\t\t\t\t\"<li>ipsum</li>\" +\n\t\t\t\t\"</ul>\" +\n\t\t\t\t\"<ol>\" +\n\t\t\t\t\t\"<li start=\\\"3\\\">Lorem</li>\" +\n\t\t\t\t\t\"<li>ipsum</li>\" +\n\t\t\t\t\"</ol>\";\n\nvar styleConfig: {\n\theadingStyle: \"indention\",\n\tuIndentionChar: \".\";\n\tlistIndentionTabs: 2;\n};\n\nvar plainText = textVersion(htmlText, styleConfig);\n// returns \"\n// ..Lorem\n// ..ipsum\n// 3.Lorem\n// 4.ipsum\"\n```\n\nTry it online in our [Demo page](http://emailtextversion.com/)!\n\nDon't forget to check out our other open source projects at [EDMdesigner](http://edmdesigner.com/).\n\nFollow us on [github](https://github.com/EDMdesigner) and [twitter](https://twitter.com/EDMdesigner)!",
  "readmeFilename": "README.md",
  "_id": "textversionjs@1.0.2",
  "dist": {
    "shasum": "be209e80fcfe4c13cf52218d07305f3ea8ef74ea"
  },
  "_from": "textversionjs@^1.0.2",
  "_resolved": "https://registry.npmjs.org/textversionjs/-/textversionjs-1.0.2.tgz"
}
